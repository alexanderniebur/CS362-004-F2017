Alexander Niebur
CS 362
Oct. 22 2017

For creating inputChar(), I looked at the range of characters I had to include, ranging from parentheses to curly braces. I then took to the ASCII table (http://www.asciitable.com/) to find the exact range I would have to find. Looking at the table, I saw that the ASCII numbers I was looking for were between 40 and 125, so I used “rand()% 85 + 40” to account for the ‘(‘ case and the ‘}’ case alongside every case in between. I then type casted to return the correct data type. When I ran this though, I kept getting stuck at state 3, so I looked back at the code, and realized that the ‘ ‘ character needed to be in the range as well, so I adjusted the code to “return (char)(rand()%94 +32);” to account for the space character and the rest in between.

	As for inputString, I knew based off the last conditional that my string had to have 5 characters, so long as the 6th character was ‘\0’. This lead to creating the string, str, of length 6. I then used memset to clear each index in str to ‘\0’ because I am used to using that function for clearing strings. The next step was looping through each index in the array using itr and a for loop, and filling them with characters. To fill with characters, I just used the same function as I did for inputChar. This could get me to state nine, but I was confused why the program would not end. I then adjusted the range to only include lower case characters, as those are what mattered in this example, but it still was not working. That was when I noticed that my string was printing six characters instead of 5, because I forgot to account for the last character getting overwritten when writing my for loop, so I adjusted the range of the loop, compiled, ran it, and after a few seconds, I got the error output I was looking for.
